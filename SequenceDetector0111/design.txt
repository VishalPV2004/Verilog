module Sequence_Detector_0111(input x, clk, reset, output reg z);

  parameter s0 = 0, s1 = 1, s2 = 2, s3 = 3;
  reg [1:0] state, nextstate;

  // Combinational logic
  always @(state, x) begin
    case(state)
      s0: nextstate = (x) ? s0 : s1;
      s1: nextstate = (x) ? s2 : s1;
      s2: nextstate = (x) ? s3 : s1;
      s3: nextstate = (x) ? s0 : s1;
    endcase
  end

  // Sequential logic 
  always @(posedge clk or posedge reset) begin
    if (reset)
      state <= s0; 
    else
      state <= nextstate;
  end

  // Output logic
  always @(state) begin
    z = (state == s3);
  end
endmodule
